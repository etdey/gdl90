#!/bin/bash
#
# Systemd service wrapper for GDL90 recorder running on RPi
#
#
NETWORK_DEV=wlan0
LISTEN_PORT=4000
ADSB_DIRECTORY=/root/adsb

LOG_DIRECTORY=${ADSB_DIRECTORY}/logs
RECORDER_SCRIPT=${ADSB_DIRECTORY}/gdl90_recorder.py

PYTHON=/usr/bin/python3

# this path must match the PIDFile value in the systemd unit.service file
PID_FILE=/var/run/gdl90_recorder.pid


function running_pid {
    if [[ -f $PID_FILE ]]; then
        pid=$(< $PID_FILE) &> /dev/null
        cat /proc/${pid}/cmdline | grep "$PYTHON" &> /dev/null
        if [[ $? -eq 0 ]]; then 
            echo $pid
            return 0
        fi
    fi
    echo 0
    return 1
}


function do_start {
    pid=$(running_pid)
    if [[ $pid -ne 0 ]]; then
        echo "ERROR: service appears to be running as PID $pid"
        echo "To remove stale pid file: rm $PID_FILE"
        return 1
    fi

    echo "Starting recorder on device $NETWORK_DEV port $LISTEN_PORT"
    $PYTHON $RECORDER_SCRIPT --interface=$NETWORK_DEV --port=$LISTEN_PORT --logprefix=$LOG_DIRECTORY &
    pid=$!
    echo $pid > $PID_FILE
    echo "Process running with PID $pid"
}


function do_stop {
    pid=$(running_pid)
    if [[ $pid -eq 0 ]]; then
        echo "INFO: did not find a running service to stop"
        return 0
    fi

    kill $pid
    rm $PID_FILE
}


case "$1" in
    start)
        do_start
        [[ $? -ne 0 ]] && exit 1
        ;;

    stop)
        do_stop
        ;;

    restart|reload)
        do_stop
        do_start
        ;;
    *)
        echo "Calling: $0 <start|stop|restart|reload>"
        exit 1
        ;;
esac
exit 0
